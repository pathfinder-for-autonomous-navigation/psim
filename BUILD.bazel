load("@rules_cc//cc:defs.bzl", "cc_library")
load("@rules_python//python:defs.bzl", "py_runtime", "py_binary")

load("//bazel:psim_build.bzl", "psim_autocoded_cc_library", "psim_cc_library", "psim_py_extension")

# Let bazel know about our virtual environment.
#
# Also see additional options passed with .bazelrc to ensure we're using the
# virtual environment.
#
# TODO : This is a little hacky and could be cleaned up with toolchains.
py_runtime(
    name = "venv",
    files = glob(["venv/**"], exclude=["venv/**/* *"]),
    interpreter = "venv/bin/python",
    python_version = "PY3",
    visibility = ["//visibility:private"],
)

# Register the autocoder as an executable. This is later consumed by the autocoder
# command. See psim.bzl for more information.
py_binary(
    name = "autocoder",
    srcs = ["//:tools/autocoder.py"],
    srcs_version = "PY3",
    visibility = ["//visibility:private"],
)

# Builds the the GNC module as a pybind11 library. This will later be linked in
# with psim targets.
cc_library(
    name = "gnc",
    srcs = glob([
        "src/gnc/**/*.hpp", "src/gnc/*.cpp", "src/gnc/**/*.inl",
        "include/gnc/**/*.inl"
    ]),
    hdrs = glob([
        "include/gnc/**/*.hpp", "include/orb/*.h", "include/orb/*.hpp"
    ]),
    includes = ["include"],
    copts = ["-Isrc", "-fvisibility=hidden"],
    linkstatic = True,
    visibility = ["//visibility:public"],
    deps = ["@lin//:lin"],
)

# PSim core library
psim_cc_library(
    name = "core",
    deps = ["@lin//:lin"],
    visibility = ["//visibility:public"],
)

# PSim truth library
psim_autocoded_cc_library(
    name = "truth",
    deps = ["@lin//:lin", "//:gnc", "//:psim_core"],
    visibility = ["//visibility:public"],
)

# PSim in Python
psim_py_extension(
    name = "psim",
    srcs = glob([
        "src/psim/python/**/*.hpp", "src/psim/python/**/*.inl",
        "src/psim/python/**/*.cpp",
    ]),
    deps = [
        "@lin//:lin", "@variant//:variant", "//:gnc", "//:psim_core",
        "//:psim_truth",
    ],
    visibility = ["//visibility:public"],
)
